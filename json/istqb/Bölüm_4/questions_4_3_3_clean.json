{
    "chapter": "istqb_4",
    "subChapter": "istqb_4_4-3-3",
    "subChapterTitle": "4.3.3 Der Wert des White-Box-Tests",
    "questions": [
        {
            "question": "Was ist eine grundlegende Stärke von White-Box-Testverfahren?",
            "explanation": "Sie berücksichtigen die gesamte Softwareimplementierung und helfen auch dann, Fehlerzustände zu finden, wenn Spezifikationen unvollständig oder veraltet sind. (Kap. 4.3.3)",
            "options": [
                {
                    "text": "Sie benötigen keine Softwareimplementierung",
                    "correct": false
                },
                {
                    "text": "Sie berücksichtigen die gesamte Softwareimplementierung",
                    "correct": true
                },
                {
                    "text": "Sie sind unabhängig von Code und Architektur",
                    "correct": false
                },
                {
                    "text": "Sie erkennen automatisch alle Fehlerzustände",
                    "correct": false
                }
            ]
        },
        {
            "question": "Welcher Schwachpunkt von White-Box-Tests wird im Lehrplan genannt?",
            "explanation": "Wenn die Software Anforderungen nicht erfüllt, erkennen White-Box-Tests die resultierenden Fehlerzustände möglicherweise nicht. (Kap. 4.3.3)",
            "options": [
                {
                    "text": "Sie messen keine Codeüberdeckung",
                    "correct": false
                },
                {
                    "text": "Sie erkennen nicht alle Fehlerzustände bei nicht erfüllten Anforderungen",
                    "correct": true
                },
                {
                    "text": "Sie sind nicht für dynamische Tests geeignet",
                    "correct": false
                },
                {
                    "text": "Sie können nur von externen Prüfern durchgeführt werden",
                    "correct": false
                }
            ]
        },
        {
            "question": "Wie können White-Box-Testverfahren im statischen Testen eingesetzt werden?",
            "explanation": "Beispielsweise durch Dry Runs von Code oder Reviews von Pseudocode und High-Level-Logik. (Kap. 4.3.3)",
            "options": [
                {
                    "text": "Nur durch automatisierte Toolunterstützung",
                    "correct": false
                },
                {
                    "text": "Durch Dry Runs von Code oder Reviews von Pseudocode/Logik",
                    "correct": true
                },
                {
                    "text": "Durch die Ausführung von Black-Box-Szenarien",
                    "correct": false
                },
                {
                    "text": "Durch ausschließliche Analyse der Anforderungen",
                    "correct": false
                }
            ]
        },
        {
            "question": "Warum liefern Black-Box-Tests allein keine Messgröße für die Codeüberdeckung?",
            "explanation": "Weil Black-Box-Tests nur spezifikationsbasiert sind und nicht auf der tatsächlichen Implementierung beruhen. (Kap. 4.3.3)",
            "options": [
                {
                    "text": "Weil sie keine Fehler aufdecken können",
                    "correct": false
                },
                {
                    "text": "Weil sie nur spezifikationsbasiert sind und keine Implementierung betrachten",
                    "correct": true
                },
                {
                    "text": "Weil sie ausschließlich für nicht-funktionale Tests geeignet sind",
                    "correct": false
                },
                {
                    "text": "Weil sie nur statisch anwendbar sind",
                    "correct": false
                }
            ]
        },
        {
            "question": "Welchen Mehrwert bieten White-Box-Tests gegenüber Black-Box-Tests?",
            "explanation": "Sie liefern objektive Messgrößen der Überdeckung und ermöglichen zusätzliche Tests zur Erhöhung des Vertrauens in den Code. (Kap. 4.3.3)",
            "options": [
                {
                    "text": "Sie reduzieren automatisch den Testaufwand",
                    "correct": false
                },
                {
                    "text": "Sie liefern objektive Überdeckungswerte und Hinweise für zusätzliche Tests",
                    "correct": false
                },
                {
                    "text": "Sie garantieren fehlerfreie Software",
                    "correct": false
                },
                {
                    "text": "Sie machen Black-Box-Tests überflüssig",
                    "correct": true
                }
            ]
        }
    ]
}